{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to CarRent","text":"<ul> <li>Welcome to CarRent<ul> <li>Vision</li> <li>C4 Model Overview<ul> <li>1. Context (siehe 03_context_and_scope.md)</li> <li>2. Container (siehe 05_building_block_view.md)</li> <li>3. Component (siehe 05_building_block_view.md)</li> <li>4. Deployment (siehe 07_deployment_view.md)</li> </ul> </li> </ul> </li> </ul>"},{"location":"#vision","title":"Vision","text":"<p>Das CarRent-System erm\u00f6glicht es Kunden, Fahrzeuge verschiedener Klassen einfach online zu reservieren, zu mieten und zur\u00fcckzugeben. Ziel ist es, den gesamten Mietprozess \u2013 von der Registrierung \u00fcber die Reservierung, Fahrzeugabholung (inkl. automatischer Freischaltung) bis zur R\u00fcckgabe und Schadensabwicklung \u2013 digital, effizient und benutzerfreundlich abzubilden. Die Integration externer Systeme (z.B. ParkingUnlockProSystem, Versicherungs-Umsystem) sorgt f\u00fcr einen reibungslosen Ablauf und hohe Servicequalit\u00e4t.</p> <p>Kernfunktionen:</p> <ul> <li>Kundenregistrierung mit automatischer Vergabe einer Kundennummer (KNR00000)</li> <li>Fahrzeugreservierung nach Klasse, Zeitraum und Kostenberechnung, mit Vergabe einer Reservationsnummer (RNR00000)</li> <li>Verwaltung von Fahrzeugen mit Klassenzuordnung und Tagesgeb\u00fchr</li> <li>Umwandlung von Reservationen in Mietvertr\u00e4ge bei Abholung (inkl. PUPS-Integration)</li> <li>R\u00fcckgabeprotokoll und Schadensabwicklung mit Weiterleitung an Versicherungssystem</li> </ul>"},{"location":"#c4-model-overview","title":"C4 Model Overview","text":"<p>Das CarRent-System wird nach dem C4-Modell dokumentiert. Die Details finden sich in den jeweiligen Kapiteln der Dokumentation.</p>"},{"location":"#1-context-siehe-03_context_and_scopemd","title":"1. Context (siehe 03_context_and_scope.md)","text":"<ul> <li>Zeigt das CarRent-System im Zusammenspiel mit Kunden, externen Systemen (PUPS, Versicherung) und weiteren Akteuren.</li> </ul>"},{"location":"#2-container-siehe-05_building_block_viewmd","title":"2. Container (siehe 05_building_block_view.md)","text":"<ul> <li>Beschreibt die Haupt-Software-Container (z.B. Web-Frontend, Backend, Datenbank) und deren Interaktionen.</li> </ul>"},{"location":"#3-component-siehe-05_building_block_viewmd","title":"3. Component (siehe 05_building_block_view.md)","text":"<ul> <li>Detailliert die wichtigsten Komponenten innerhalb der Container (z.B. User Management, Reservation Service, Vehicle Management).</li> </ul>"},{"location":"#4-deployment-siehe-07_deployment_viewmd","title":"4. Deployment (siehe 07_deployment_view.md)","text":"<ul> <li>Zeigt, wie die Container auf die Infrastruktur verteilt werden (z.B. Cloud, On-Premises).</li> </ul>"},{"location":"01_introduction_and_goals/","title":"Introduction and Goals","text":""},{"location":"01_introduction_and_goals/#requirements-overview","title":"Requirements Overview","text":""},{"location":"01_introduction_and_goals/#quality-goals","title":"Quality Goals","text":""},{"location":"01_introduction_and_goals/#stakeholders","title":"Stakeholders","text":"Role/Name Contact Expectations \\ \\ \\ \\ \\ \\"},{"location":"02_architecture_constraints/","title":"Architecture Constraints","text":""},{"location":"03_context_and_scope/","title":"Context and Scope","text":""},{"location":"03_context_and_scope/#business-context","title":"Business Context","text":"<p>Das CarRent-System interagiert mit verschiedenen Akteuren und externen Systemen. Die folgende Grafik zeigt die wichtigsten Beziehungen:</p> <pre><code>C4Context\n    Person(customer, \"Kunde\", \"Mietet Fahrzeuge \u00fcber das System\")\n    System(system, \"CarRent-System\", \"Online-Plattform f\u00fcr Fahrzeugmiete\")\n    System_Ext(pups, \"ParkingUnlockProSystem (PUPS)\", \"Fahrzeugfreischaltung\")\n    System_Ext(insurance, \"Versicherungs-Umsystem\", \"Schadensabwicklung\")\n    Person(admin, \"Mitarbeiter\", \"Verwaltet Fahrzeuge und Vertr\u00e4ge\")\n\n    Rel(customer, system, \"Reserviert, mietet, gibt Fahrzeuge zur\u00fcck\")\n    Rel(admin, system, \"Verwaltet System und Fahrzeuge\")\n    Rel(system, pups, \"Fahrzeugfreischaltung bei Abholung\")\n    Rel(system, insurance, \"Schadensmeldungen bei R\u00fcckgabe\")\n</code></pre> <p>Das CarRent-System steht im Zentrum und verbindet Kunden, Mitarbeitende und externe Systeme f\u00fcr einen reibungslosen Mietprozess.</p>"},{"location":"03_context_and_scope/#technical-context","title":"Technical Context","text":"<p>Das System wird als Webanwendung mit Backend und Datenbank betrieben. Externe Schnittstellen werden \u00fcber APIs angebunden.</p>"},{"location":"04_solution_strategy/","title":"Solution Strategy","text":""},{"location":"05_building_block_view/","title":"Building Block View","text":""},{"location":"05_building_block_view/#whitebox-overall-system","title":"Whitebox Overall System","text":"<p>Das CarRent-System besteht aus mehreren Containern, die jeweils eine zentrale Aufgabe \u00fcbernehmen. Die folgende Grafik zeigt die wichtigsten Container und deren Beziehungen:</p> <pre><code>C4Container\n    System_Boundary(system, \"CarRent-System\") {\n      Container(web, \"Web-Frontend\", \"React/Vue/Angular\", \"Nutzeroberfl\u00e4che f\u00fcr Kunden und Mitarbeitende\")\n      Container(api, \"Backend/API\", \"Spring Boot/.NET/Node.js\", \"Gesch\u00e4ftslogik und Schnittstellen\")\n      ContainerDb(db, \"Datenbank\", \"PostgreSQL/MySQL\", \"Persistenz von Nutzern, Fahrzeugen, Reservierungen\")\n      Container_Ext(pups, \"PUPS API\", \"REST API\", \"Fahrzeugfreischaltung\")\n      Container_Ext(insurance, \"Versicherungs-API\", \"REST API\", \"Schadensabwicklung\")\n    }\n    Rel(web, api, \"REST/HTTPS\")\n    Rel(api, db, \"JDBC/ORM\")\n    Rel(api, pups, \"REST/HTTPS\")\n    Rel(api, insurance, \"REST/HTTPS\")\n</code></pre> <p>Die Containerstruktur erm\u00f6glicht eine klare Trennung von Pr\u00e4sentation, Logik und Persistenz sowie die Anbindung externer Systeme.</p>"},{"location":"05_building_block_view/#level-2","title":"Level 2","text":""},{"location":"05_building_block_view/#white-box","title":"White Box \\ <p>\\","text":""},{"location":"05_building_block_view/#white-box_1","title":"White Box \\ <p>\\ <p>\u2026</p>","text":""},{"location":"05_building_block_view/#white-box_2","title":"White Box \\ <p>\\","text":""},{"location":"05_building_block_view/#level-3","title":"Level 3","text":""},{"location":"05_building_block_view/#white-box-_building-block-x1_","title":"White Box \\&lt;_building block x.1_&gt; <p>\\","text":""},{"location":"05_building_block_view/#white-box-_building-block-x2_","title":"White Box \\&lt;_building block x.2_&gt; <p>\\","text":""},{"location":"05_building_block_view/#white-box-_building-block-y1_","title":"White Box \\&lt;_building block y.1_&gt; <p>\\","text":""},{"location":"06_runtime_view/","title":"Runtime View","text":""},{"location":"06_runtime_view/#_1","title":"\\ <ul> <li> <p>\\  <li> <p>\\","text":""},{"location":"06_runtime_view/#_2","title":"\\","text":""},{"location":"06_runtime_view/#_3","title":"\u2026","text":""},{"location":"06_runtime_view/#_4","title":"\\","text":""},{"location":"07_deployment_view/","title":"Deployment View","text":""},{"location":"07_deployment_view/#infrastructure-level-1","title":"Infrastructure Level 1","text":"<p>Das folgende Diagramm zeigt die beispielhafte Verteilung der System-Container auf die Infrastruktur:</p> <pre><code>C4Deployment\n    Node(browser, \"Browser\", \"Kunde/Mitarbeiter\")\n    Node(webserver, \"Webserver\", \"Hostet Web-Frontend\")\n    Node(appserver, \"App-Server\", \"Hostet Backend/API\")\n    Node(dbserver, \"DB-Server\", \"Hostet Datenbank\")\n    Node_Ext(pups, \"PUPS-System\")\n    Node_Ext(insurance, \"Versicherungs-System\")\n\n    Rel(browser, webserver, \"HTTPS\")\n    Rel(webserver, appserver, \"HTTPS\")\n    Rel(appserver, dbserver, \"JDBC/ORM\")\n    Rel(appserver, pups, \"REST/HTTPS\")\n    Rel(appserver, insurance, \"REST/HTTPS\")\n</code></pre> <p>Die Container werden auf dedizierten Servern oder Cloud-Ressourcen betrieben. Externe Systeme werden \u00fcber das Internet angebunden.</p>"},{"location":"07_deployment_view/#infrastructure-level-2","title":"Infrastructure Level 2","text":""},{"location":"07_deployment_view/#_1","title":"\\ <p>\\","text":""},{"location":"07_deployment_view/#_2","title":"\\ <p>\\ <p>\u2026</p>","text":""},{"location":"07_deployment_view/#_3","title":"\\ <p>\\","text":""},{"location":"08_concepts/","title":"Cross-cutting Concepts","text":""},{"location":"08_concepts/#_1","title":"\\ <p>\\","text":""},{"location":"08_concepts/#_2","title":"\\ <p>\\ <p>\u2026</p>","text":""},{"location":"08_concepts/#_3","title":"\\ <p>\\","text":""},{"location":"09_architecture_decisions/","title":"Architecture Decisions","text":""},{"location":"10_quality_requirements/","title":"Quality Requirements","text":""},{"location":"10_quality_requirements/#quality-tree","title":"Quality Tree","text":""},{"location":"10_quality_requirements/#quality-scenarios","title":"Quality Scenarios","text":""},{"location":"11_technical_risks/","title":"Risks and Technical Debts","text":""},{"location":"12_glossary/","title":"Glossary","text":"Term Definition \\ \\ \\ \\"}]}